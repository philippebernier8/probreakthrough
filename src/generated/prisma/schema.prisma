// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String           @id @default(uuid())
  email                   String           @unique
  name                    String
  position                String
  club                    String
  competitionLevel        String
  height                  Float?
  weight                  Float?
  photoUrl                String?
  createdAt               DateTime         @default(now())
  updatedAt               DateTime         @updatedAt
  matches                 Match[]
  receivedRecommendations Recommendation[] @relation("ReceivedRecommendations")
  givenRecommendations    Recommendation[] @relation("GivenRecommendations")
}

model Match {
  id          String   @id @default(uuid())
  date        DateTime
  opponent    String
  player      User     @relation(fields: [playerId], references: [id])
  playerId    String
  matchNumber Int
  stats       Json // Stocke toutes les statistiques du match
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([playerId, matchNumber])
}

model Recommendation {
  id        String   @id @default(uuid())
  from      User     @relation("GivenRecommendations", fields: [fromId], references: [id])
  fromId    String
  to        User     @relation("ReceivedRecommendations", fields: [toId], references: [id])
  toId      String
  content   String
  rating    Int      @default(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([fromId, toId])
}
